MVCモデルの復讐
//Model　システム本体、根幹の大切な部分。データベースとデータのやり取りを行う。データベースから取得したデータをプログラムで使いやすいように取り出しし変換するといった役割を担う。
データ管理の役割の責任を持つパーツ。

//View ユーザーインターフェイスの部分を担当。ユーザーが直接見る画面のことで入力した機能の処理を行う。
レイアウトやメニュー、ボタンの操作性など画面表示やボタンの操作性のviewの役割。
「動的に生成する」
静的＝誰が見ても同じの画面が表示
動的＝ログインしたら見る人によって画面の見方が違う

Controller
//ユーザーの入力に基づきモデルとビューを制御する役割を担う。モデルで取り出したデータを元に画面を表示する指示を出す。
クライアントとビュー、モデルの橋渡し役。

インスタンス化
オブジェクト指向のプログラミングにおいて、インスタンスを構成するところ。
ー＞

インスタンス変数
個々のインスタンスごとに固有の変数。
$instance=new Sample;

クラスメゾット
クラス名でそのクラス名に対してのメソッドである。

継承
オブジェクト指向を構成する概念の１つ。役割は、主に初期化であることが多い。
$child = new ChildClasss();
$child->printBase();
$child->printChild();

メソッドチェーン
あるオブジェクトに対しメソッドを連結して繋げること。->を使いメソッドを繋げて呼び出す方法。

saveメソッドを呼ぶことで、データがテーブルに保存される
$posts->save();

・データベース：データを保存するアプリのこと。または、そのデータベースアプリ内での、テーブルの集合を指すこともある
・テーブル：データ（レコード）を保存するための入れ物
・カラム：テーブルに保存する項目
・レコード：テーブルに保存された実際のデータ